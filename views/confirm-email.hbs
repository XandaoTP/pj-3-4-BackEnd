<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>digite Pin</title>
    <style>
        input.inptnumber::-webkit-outer-spin-button,
        input.inptnumber::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
        }

        /* Firefox */
        input[type=number] {
        -moz-appearance: textfield;
        }
        .inptnumber{
            font-size: 3em;
            text-align: center;
            width: 40px;
            height: 40px;
            
        }
        .inputs{
            display: flex;
            justify-content: center;
            gap: 2px;
        }
        h1{
            display: block;
            text-align: center;
            margin-bottom: 10px;
        }
        .btn {
            text-align: center;
            margin-top: 10px
        }
        button {
            width: 150px;
            height: 50px;
            background-color: rgb(2, 2, 110);
            color: rgb(255, 255, 255);
            cursor: pointer;
        }
        #message{
            color: #e74c3c;
            text-align: center;
            float: left;
            margin-top: 1.2em;
            width: 100%;
        }
    </style>
</head>
<body>
    <h1>Digite o Pin</h1>
    <form>
        <div class="inputs">
            <input type="number" class="inptnumber" name="0" id="ipt_0">
            <input type="number" class="inptnumber" name="1" id="ipt_1">
            <input type="number" class="inptnumber" name="2" id="ipt_2">
            <input type="number" class="inptnumber" name="3" id="ipt_3">
            <input type="number" class="inptnumber" name="4" id="ipt_4">
            <input type="number" class="inptnumber" name="5" id="ipt_5">
        </div>
        <div id="message" style="display: none;">Digite o código PIN de 6 dígitos.</div>
        <div class="btn">
            <button type="button" onclick="submitPin()" id="text_btn">Verificar</button>
        </div> 
    </form>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>  
        const pinNumbers = document.querySelectorAll('.inputs input');
        const initialValue = [null, null, null, null, null, null];
        const btn_text = document.querySelector('#text_btn')
        const urlPin = window.location.origin;
        const localPin =  window.location.search.split("?pin=")[1]
        console.log(localPin)
        
        const loadPin = () => {
            if(localPin !== undefined) {
                for(let i = 0 ; i < 6; i++){
                    document.querySelector(`#ipt_${i}`).value = localPin[i];
                    initialValue[i] = localPin[i];
                }
            }
        }
        
        pinNumbers.forEach(value => {
            value.addEventListener('keyup', (event) => {
            let iptname = parseInt(event.currentTarget.name);
            let iptvalue = parseInt(event.currentTarget.value);

            if(iptvalue >= 0 && iptvalue < 10 || isNaN(iptvalue)){
                initialValue[iptname] = iptvalue;
            } 
            event.currentTarget.value = initialValue[iptname]

            let iptEl = null;
            if(event.currentTarget.value === ""){
            iptEl = document.querySelector(`#ipt_${iptname -1}`)
            } else {
            iptEl = document.querySelector(`#ipt_${iptname +1}`)
            }
            if(iptEl){
                    iptEl.focus();
                }
        })
        })

        const submitPin = async () => {
            const pin = initialValue.join("");
            if(pin.length === 6){
                try{
                    const result = await requestPin(pin);
                if(result.status === 200) {
                btn_text.innerText = result.data.msg;
                message.style.display = 'none'
                pinNumbers.forEach(iptNumbers => {
                    iptNumbers.value= '';
                })
            } 
            }catch (err) {
               btn_text.innerText = 'Erro ao validar email.'
               btn_text.style.backgroundColor = '#e74c3c'
            }
        }else {
            message.style.display = 'block';
        }
           
        }

        const requestPin =  async (pin) => {
            console.log(typeof pin, pin)
            try {
             const result = await axios({
                   
                    url: `http://localhost:3000/auth/confirm-email?pin=${pin}`,
                    method: "post",
                    data: {
                        pin
                        } 
            })
            console.log('oiiiiii', result)
            return result

            } catch (err) {
                throw err;
            }
        }
    </script>
</body>
</html>